version: "3.8"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8080:8080"
    depends_on:
      - db
      - kafka
      - redis  # ‚úÖ Redis ÏùòÏ°¥ÏÑ± Ï∂îÍ∞Ä
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/offflow
      SPRING_DATASOURCE_USERNAME: offflow
      SPRING_DATASOURCE_PASSWORD: secret
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_DATA_REDIS_HOST: redis        # üîÅ Î≥ÄÍ≤Ω
      SPRING_DATA_REDIS_PORT: 6379         # ‚úÖ Ï∂îÍ∞Ä

  db:
    image: postgres:15
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_DB: offflow
      POSTGRES_USER: offflow
      POSTGRES_PASSWORD: secret
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"

  kafka:
    image: bitnami/kafka:3.5.1
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_KRAFT_MODE: "no"
      KAFKA_CFG_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://192.168.35.234:9092  # ‚Üê Ïó¨Í∏∞Ïóê Ïô∏Î∂ÄÏóêÏÑú Ï†ëÍ∑º Í∞ÄÎä•Ìïú IP
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      - zookeeper

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped

volumes:
  pgdata:
